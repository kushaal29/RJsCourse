{"version":3,"sources":["components/Navbar.js","components/TextForm.js","components/Alert.js","App.js","reportWebVitals.js","index.js"],"names":["Navbar","props","React","createElement","className","concat","mode","href","title","type","data-bs-toggle","data-bs-target","aria-controls","aria-expanded","aria-label","id","aria-current","role","placeholder","onClick","toggleMode","htmlFor","toggleModeRed","TextForm","text","setText","useState","useEffect","Fragment","style","color","heading","value","onChange","event","console","log","target","backgroundColor","rows","handleUpClick","toUpperCase","newText","showAlert","handleLoClick","toLowerCase","newtext1","handleCopy","document","getElementById","select","setSelectionRange","navigator","clipboard","writeText","removeExtraSpace","ntxt","split","join","handleClear","my-3","length","defaultProps","aboutText","Alert","alert","word","lower","charAt","slice","captitalize","msg","App","setMode","setAlert","message","setTimeout","body","my3","reportWebVitals","onPerfEntry","Function","then","_ref","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","createRoot","render","StrictMode"],"mappings":"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","file":"static/js/main.473ae1b6.chunk.js","sourcesContent":["import React from 'react'\r\nimport PropTypes from 'prop-types'\r\n// import { Link } from 'react-router-dom'\r\n\r\n\r\n\r\n\r\nexport default function Navbar(props) {\r\n  return (\r\n    <nav className={`navbar navbar-expand-lg navbar-${props.mode} bg-${props.mode}`}>\r\n  <div className=\"container-fluid\">\r\n    <a className=\"navbar-brand\" href =\"#\">{props.title}</a>\r\n    <button className=\"navbar-toggler\" type=\"button\" data-bs-toggle=\"collapse\" data-bs-target=\"#navbarSupportedContent\" aria-controls=\"navbarSupportedContent\" aria-expanded=\"false\" aria-label=\"Toggle navigation\">\r\n      <span className=\"navbar-toggler-icon\"></span>\r\n    </button>\r\n    <div className=\"collapse navbar-collapse\" id=\"navbarSupportedContent\">\r\n      <ul className=\"navbar-nav me-auto mb-2 mb-lg-0\">\r\n        <li className=\"nav-item\">\r\n          <a className=\"nav-link active\" aria-current=\"page\" href=\"#\">Home</a>\r\n        </li>\r\n        {/* <li className=\"nav-item\">\r\n          <Link className=\"nav-link\" to=\"/about\">{props.aboutText}</Link>\r\n        </li> */}\r\n      </ul>\r\n      <form className=\"d-flex\" role=\"search\">\r\n        <input className=\"form-control me-2\" type=\"search\" placeholder=\"Search\" aria-label=\"Search\" />\r\n        <button className=\"btn btn-primary\" type=\"submit\">Search</button>\r\n      </form>\r\n      <div className={`form-check form-switch text-${props.mode==='light'?'dark':'light'} mx-4`}>\r\n  <input className=\"form-check-input\" onClick={props.toggleMode} type=\"checkbox\" role=\"switch\" id=\"flexSwitchCheckDefault\" />\r\n  <label className=\"form-check-label\" htmlFor=\"flexSwitchCheckDefault\">Enable Dark Mode</label>\r\n</div>\r\n<div className={`form-check form-switch text-${props.mode==='light'?'red':'light'} mx-4`}>\r\n  <input className=\"form-check-input\" onClick={props.toggleModeRed} type=\"checkbox\" role=\"switch\" id=\"flexSwitchCheckDefault\" />\r\n  <label className=\"form-check-label\" htmlFor=\"flexSwitchCheckDefault\">Enable Red Mode</label>\r\n</div>\r\n    </div>\r\n  </div>\r\n\r\n</nav>\r\n  )\r\n}\r\n\r\n//Prope type in which we define the type of prop it must accept and isRequired is used to set the field mandatory that it should get\r\n// anything in the field in the string type which we mandated and  it is fulfilled by default props where if the field do not get anything defined then\r\n//it will show the default string written in default props mentioned below respectively for the feilds.\r\nNavbar.propTypes= {title: PropTypes.string.isRequired,\r\n                    aboutText: PropTypes.string.isRequired}\r\n\r\nNavbar.defaultProps = {\r\n    title: 'Set title here',\r\n    aboutText: 'About'\r\n}","import React,{useState, useEffect} from 'react'\r\n// import {Text, StyleSheet} from 'react-native';\r\n\r\n\r\n\r\n\r\n\r\nexport default function TextForm(props) {\r\n    const handleUpClick=()=>{\r\n        // console.log(\"Uppercase was clicked\" + text);\r\n        console.log(text.toUpperCase())\r\n        let newText=text.toUpperCase();\r\n        setText(newText)\r\n        props.showAlert(\"Converted to Uppercase !\", \"success\")\r\n    }\r\n\r\n    const handleCopy=()=>{\r\n      console.log(\"I AM COPY\")\r\n      var text=document.getElementById(\"myBox\")\r\n      text.select();\r\n      text.setSelectionRange(0,9999);\r\n      navigator.clipboard.writeText(text.value)\r\n      props.showAlert(\"Text Copied !\", \"success\")\r\n    }\r\n\r\n    const removeExtraSpace=()=>{\r\n      let ntxt= text.split(/[  ]+/);\r\n      setText(ntxt.join(\" \"))\r\n      props.showAlert(\"Extra Spaces Removed\", \"success\")\r\n    }\r\n\r\n    const handleLoClick=()=>{\r\n      console.log(text.toLowerCase());\r\n      let newtext1= text.toLowerCase();\r\n      setText(newtext1)\r\n      props.showAlert(\"Converted to Lowercase\", \"success\")\r\n    }\r\n    const handleClear=()=>{\r\n      console.log(\"CLEAR TEXT\");\r\n      let newtext1= \" \";\r\n      setText(newtext1)\r\n      props.showAlert(\"Text Cleared! \", \"success\")\r\n    }\r\n    const handleOnChange=(event)=>{\r\n        console.log(\"On change\");\r\n        setText(event.target.value)\r\n    }\r\n\r\n    \r\n\r\n    const [text, setText]=useState('');\r\n    useEffect(()=>{\r\n        setText(\"\")\r\n\t}, [])\r\n   \r\n    \r\n\r\n  return (\r\n    <>\r\n<div className=\"container\" style={{color:props.mode==='dark'?'light':'dark'}}>\r\n  \r\n    <h1>{props.heading} </h1>\r\n    <div className=\"mb-3\">\r\n    <textarea className=\"form-control\" value={text} onChange={handleOnChange} style={{backgroundColor:props.mode==='dark'?'grey':'white', color:props.mode==='dark'?'white':'black'}} id=\"myBox\" rows=\"8\"></textarea>\r\n    </div>\r\n    <button className=\"btn btn-primary mx-2 \" onClick={handleUpClick} >Convert to Uppercase</button>\r\n    <button className=\"btn btn-primary mx-2\" onClick={handleLoClick} >Convert to Lowercase</button>\r\n    { <button className=\"btn btn-primary mx-2\" onClick={handleCopy} >Copy Text</button> }\r\n    {<button className=\"btn btn-primary mx-2\" onClick={removeExtraSpace} >Remove Extra Space</button>}\r\n    {<button className=\"btn btn-primary\" onClick={handleClear} >Clear Text</button> } \r\n</div>\r\n<div className=\"container\" my-3  >\r\n  <h1>Your text summary</h1>\r\n  { <p>{(text.split(\" \").length)-1} words, {text.length} characters</p> }\r\n \r\n  <p>{0.008 * text.split(\" \").length} Minutes Read</p>\r\n  <h3>Preview</h3>\r\n  <p>{text.length>0?text:\"Enter something to preview here\"}</p>\r\n</div>\r\n</>\r\n  )\r\n}\r\n","import React from 'react'\r\n\r\nfunction Alert(props) {\r\n    const captitalize = (word)=>{\r\n        const lower= word.toLowerCase();\r\n        return lower.charAt(0).toUpperCase() + lower.slice(1);  // Capitalize the first alphabet of the word example:Success\r\n    }\r\n  return (\r\n   props.alert && <div className={`alert alert-${props.alert.type} alert-dismissible fade show`} role=\"alert\">\r\n  <strong>{captitalize(props.alert.type)}</strong> : {props.alert.msg} \r\n  \r\n</div>\r\n  )\r\n}\r\n\r\nexport default Alert\r\n","import React from 'react';\n// import { BrowserRouter as Router, Switch, Route } from \"react-router-dom\";\nimport { useState, useEffect} from 'react';\nimport './App.css';\nimport Navbar from './components/Navbar';\n// import About from './components/about';\n import TextForm from './components/TextForm';\nimport Alert from './components/Alert';\n\n\n\n\n\n\n\nfunction App() {\n  const [mode, setMode]= useState('light') //whether dark mode is enabled or not\n  useEffect(()=>{\n    setMode('light')\n}, [])\n\nconst [alert,setAlert]= useState(null);\n\nconst showAlert = (message, type)=>{\n  setAlert({\n    msg: message,\n    type: type\n  })\n\n  setTimeout(()=>{\n    setAlert(null)\n  }, 1500)\n}\n\nconst toggleMode=()=>{\n  if(mode === 'light')\n  {\n    setMode('dark')\n    document.body.style.backgroundColor='grey'\n    showAlert(\"Dark mode has been enabled\", \"success\")          //showAlert(message, type) //passing\n    document.title='TextUtils- Dark Mode'\n    // setInterval(()=>{\n    //   document.title=\"TextUtils is Amazinng\"\n    // },1000)\n    // setInterval(()=>{\n    //   document.title=\"Install text utils now\"\n    // },1500)\n  }\n  else{\n    setMode('light')\n    document.body.style.backgroundColor='white'\n    showAlert(\"Light mode has been enabled\", \"success\")          //showAlert(message, type) //passing\n\n    document.title='TextUtils- Light Mode'\n  }\n}\n\nconst toggleModeRed=()=>{\n  if(mode === 'light')\n  {\n    setMode('red')\n    document.body.style.backgroundColor='red'\n    showAlert(\"Red mode has been enabled\", \"success\")          //showAlert(message, type) //passing\n  }\n  else{\n    setMode('light')\n    document.body.style.backgroundColor='white'\n    showAlert(\"Light mode has been enabled\", \"success\")          //showAlert(message, type) //passing\n  }\n  \n\n  \n\n\n}\n  return (\n    <>\n {/* <Router>  */}\n<Navbar title=\"TEXT UTILS \" mode={mode}  toggleMode={toggleMode} toggleModeRed={toggleModeRed}/>\n<Alert alert={alert}/>\n<div className=\"container\" my3>\n{/* <Switch>\n          <Route exact path=\"/about\">\n           \n          </Route>\n          <Route exact path=\"/\">       */}\n          {<TextForm  showAlert={showAlert} heading=\"Enter the text to analyze below\" mode={mode}/> }\n         \n          {/* /* </Route>\n        </Switch> */ }\n       \n      \n</div>\n{/* </Router> */}\n    </>\n  \n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom/client';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nconst root = ReactDOM.createRoot(document.getElementById('root'));\nroot.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}